# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

#set $mod Mod1
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono, Icons 9
#font pango: Noto Mono, Icons 9
#font pango: Source Code Pro Medium, Icons 10 
#font pango: Icons, Source Code Pro Medium 9
#font pango: San Francisco Display 8
#font pango: Liberation Mono 8
#font pango:Terminus, Icons 12px

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec urxvt
#bindsym $mod+Return exec alacritty
#bindsym $mod+Return exec kitty
# make sure xrdb is fresh before we create our scratchpad terminal
exec xrdb ~/.Xresources
# Create a shell we can use as a scratchpad
exec urxvt -T "floatingShell"
for_window [title="^floatingShell$"] move scratchpad, scratchpad show, scratchpad show;
bindsym $mod+Shift+Return scratchpad show
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

# Disable focus follows mouse...
focus_follows_mouse no

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
#bindsym $mod+d exec rofi -show run -theme Arc-Dark
bindsym $mod+d exec rofi -show run
bindsym $mod+Tab exec rofi -show window
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacked
#bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

set $leftDisp   VGA-1-1
set $rightDisp  DVI-D-0

# bind workspaces that go on the left
workspace $ws1 output $leftDisp
workspace $ws2 output $leftDisp
workspace $ws3 output $leftDisp
workspace $ws4 output $leftDisp
workspace $ws5 output $leftDisp

# bind workspaces that go on the right
workspace $ws10 output $rightDisp
workspace $ws9 output $rightDisp
workspace $ws8 output $rightDisp
workspace $ws7 output $rightDisp
workspace $ws6 output $rightDisp

assign [class="Firefox" instance="Navigator"] $ws1
assign [class="Slack" instance="slack"] $ws2
assign [class="Google-chrome" instance="google-chrome"] $ws2
#assign [title="htop"] $ws10
#assign [title="calcurse"] $ws10

# startup compton
exec --no-startup-id compton --vsync
# we pretty much always want to surf the web so why not!
# Load layout for workspace 10 on startup
#exec --no-startup-id "i3-msg 'workspace 10; append_layout ~/.config/i3/ws10.json'"
#exec --no-startup-id firefox 
#exec --no-startup-id slack
#exec --no-startup-id google-chrome https://web.whatsapp.com/
#exec --no-startup-id urxvt -name "calcurse" -e calcurse
#exec --no-startup-id urxvt -name "htop" -e htop
#exec --no-startup-id urxvt -name "ranger" -e ranger
#for_window [class="Google-chrome" instance="google-chrome"] 
#for_window [class="Slack" instance="slack"] move left
#for_window [title="^calcurse$"] layout splith
#for_window [title="^htop$"] layout splitv, move right 
#for_window [title="^ranger$"] move right, move down

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# exit i3 (no nag)
bindsym $mod+Shift+Ctrl+q exec "i3-msg exit"

bindsym $mod+shift+x exec "~/.config/i3/lock -i $bg_path"

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
        bindsym j resize shrink width 2 px or 2 ppt
        bindsym k resize grow height 2 px or 2 ppt
        bindsym l resize shrink height 2 px or 2 ppt
        bindsym semicolon resize grow width 2 px or 2 ppt

# same bindings, but for the arrow keys
        bindsym Left resize shrink width 2 px or 2 ppt
        bindsym Down resize grow height 2 px or 2 ppt
        bindsym Up resize shrink height 2 px or 2 ppt
        bindsym Right resize grow width 2 px or 2 ppt

# back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

bindsym $mod+Ctrl+Left resize shrink width 2 px or 2 ppt
bindsym $mod+Ctrl+Right resize grow width 2 px or 2 ppt
bindsym $mod+Ctrl+Down resize shrink height 2 px or 2 ppt
bindsym $mod+Ctrl+Up resize grow height 2 px or 2 ppt

# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use 
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources.
set_from_resource $bg         i3wm.color0 #f0f0f0
set_from_resource $fg         i3wm.color2 #f0f0f0
set_from_resource $trim       i3wm.color7 #f0f0f0
set_from_resource $trim-alt   i3wm.color1 #f0f0f0
set_from_resource $untrim     i3wm.color1 #f0f0f0

# class                 border   backgr. text indicator   child_border
client.focused          $fg      $bg     $fg  $trim       $fg
client.focused_inactive $untrim  $bg     $fg  $untrim     $trim-alt
client.unfocused        $untrim  $bg     $fg  $trim       $trim
client.urgent           $fg      $bg     $fg  $trim       $trim
client.placeholder      $fg      $bg     $fg  $trim       $trim

client.background       $bg

# class                 border  bground text    indicator child_border
#client.focused          #00b0ef #00b0ef #141414 #ff7066
#client.focused_inactive #141414 #141414 #00b0ef #472b2a
#client.unfocused        #141414 #141414 #7d7d7d #141414
#client.urgent           #ff7066 #ff7066 #141414 #ff7066
#client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C

#client.background       #4C4C4C

exec ~/.config/polybar/launch.sh
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#    status_command i3status
#        colors {
#                #background #141414
#                background $bg
#                statusline $fg
#                #statusline #00b0ef
#                separator $fg
#
#                #focused_workspace #00b0ef #141414 #00b0ef #FFFFFF
#                focused_workspace $fg $bg $fg #FFFFFF
#                #active_workspace #141414 #141414 #00b0ef #FFFFFF
#                active_workspace $bg $bg $fg #FFFFFF
#                inactive_workspace $bg $bg $trim #888888
#                urgent_workspace $trim $bg $fg #FFFFFF
#        }
#}

# Pulse Audio controls
#set $pa_sink exec --no-startup-id pactl list sinks | grep Sink | sed 's/.*#//'
set $pa_sink alsa_output.usb-Avid_Avid_Mbox_Mini-00.iec958-stereo
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $pa_sink +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $pa_sink -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute $pa_sink toggle # mute sound

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# enable numlock on startup
exec_always --no-startup-id numlockx on

# Multi-screen screenshots with scrot
bindsym --release Print exec scrot 'screenshot_%Y%m%d_%H%M%S.png' -e 'mkdir -p ~/Pictures/screenshots && mv $f ~/Pictures/screenshots && xclip -selection clipboard -t image/png -i ~/Pictures/screenshots/`ls -1 -t ~/Pictures/screenshots | head -1`' # All screens

# OSX-like area selection screenshots
bindsym --release Shift+Print exec scrot -s 'screenshot_%Y%m%d_%H%M%S.png' -e 'mkdir -p ~/Pictures/screenshots && mv $f ~/Pictures/screenshots && xclip -selection clipboard -t image/png -i ~/Pictures/screenshots/`ls -1 -t ~/Pictures/screenshots | head -1`' # Area selection

# i3-gaps
# You can also use any non-zero value if you'd like to have a border
for_window [class=".*"] border pixel 1
gaps inner 10
gaps outer 10
smart_gaps on
smart_gaps inverse_outer


# Create configuration mode
set $mode_config Configure
bindsym $mod+c mode "$mode_config"

# Configuration mode keys
mode "$mode_config" {
    bindsym i exec urxvt -e vim ~/.config/i3/config
    bindsym z exec urxvt -e vim ~/.zshrc
    bindsym v exec urxvt -e vim ~/.vimrc
    bindsym x exec urxvt -e vim ~/.Xresources
    bindsym r exec xrdb -e ~/.Xresources

    bindsym Escape mode "default"
    bindsym Return mode "default"
}


bindsym $mod+Shift+w exec firefox
bindsym $mod+Ctrl+c exec gnome-calculator
for_window [class="Gnome-calculator"] floating enable

# Use xprop to find this out
for_window [class="Flee" instance="flee"] floating enable

